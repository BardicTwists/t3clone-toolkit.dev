import { ModelCapability, type Model } from "@/lib/ai/types";

const openAiModelData: Omit<Model, "provider">[] = [
  {
    name: "GPT-4o",
    modelId: "gpt-4o",
    description: "Most advanced multimodal model with vision and reasoning",
    capabilities: [
      ModelCapability.Vision,
      ModelCapability.Code,
      ModelCapability.Reasoning,
      ModelCapability.Audio,
    ],
    bestFor: ["Multimodal tasks", "Vision analysis", "Code generation"],
    contextLength: 128000,
  },
  {
    name: "GPT-4o Mini",
    modelId: "gpt-4o-mini",
    description: "Smaller, faster version of GPT-4o",
    capabilities: [
      ModelCapability.Vision,
      ModelCapability.Fast,
      ModelCapability.Code,
    ],
    bestFor: ["Quick tasks", "Cost-effective", "Simple queries"],
    contextLength: 128000,
  },
  {
    name: "GPT-4o Audio Preview",
    modelId: "gpt-4o-audio-preview",
    description: "GPT-4o with advanced audio capabilities",
    capabilities: [
      ModelCapability.Audio,
      ModelCapability.Vision,
      ModelCapability.Code,
    ],
    bestFor: ["Audio processing", "Speech tasks", "Multimodal"],
    contextLength: 128000,
  },
  {
    name: "GPT-4o Search Preview",
    modelId: "gpt-4o-search-preview",
    description: "GPT-4o with web search capabilities",
    capabilities: [
      ModelCapability.WebSearch,
      ModelCapability.Vision,
      ModelCapability.Code,
      ModelCapability.Reasoning,
    ],
    bestFor: ["Research", "Current events", "Fact-checking"],
    contextLength: 128000,
  },
  {
    name: "GPT-4 Turbo",
    modelId: "gpt-4-turbo",
    description: "Optimized for speed and efficiency",
    capabilities: [
      ModelCapability.Vision,
      ModelCapability.Code,
      ModelCapability.Reasoning,
    ],
    bestFor: ["General purpose", "Fast responses", "Complex tasks"],
    contextLength: 128000,
  },
  {
    name: "GPT-4 Turbo Preview",
    modelId: "gpt-4-turbo-preview",
    description: "Preview version with latest improvements",
    capabilities: [
      ModelCapability.Vision,
      ModelCapability.Code,
      ModelCapability.Reasoning,
    ],
    bestFor: ["Testing", "General purpose", "Development"],
    contextLength: 128000,
  },
  {
    name: "GPT-4",
    modelId: "gpt-4",
    description: "Original GPT-4 model for complex reasoning",
    capabilities: [ModelCapability.Code, ModelCapability.Reasoning],
    bestFor: ["Complex analysis", "Detailed responses", "Reasoning"],
    contextLength: 8192,
  },
  {
    name: "GPT-4.5 Preview",
    modelId: "gpt-4.5-preview",
    description: "Next-generation model preview",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Vision,
      ModelCapability.Code,
      ModelCapability.Reasoning,
    ],
    bestFor: ["Advanced tasks", "Experimental", "Complex reasoning"],
    contextLength: 200000,
    isNew: true,
  },
  {
    name: "GPT-4.1",
    modelId: "gpt-4.1",
    description: "Enhanced version with improved capabilities",
    capabilities: [
      ModelCapability.Vision,
      ModelCapability.Code,
      ModelCapability.Reasoning,
    ],
    bestFor: ["General purpose", "Improved performance", "Reliability"],
    contextLength: 128000,
  },
  {
    name: "GPT-4.1 Mini",
    modelId: "gpt-4.1-mini",
    description: "Compact version for efficiency",
    capabilities: [ModelCapability.Fast, ModelCapability.Code],
    bestFor: ["Quick responses", "Cost-effective", "Simple tasks"],
    contextLength: 128000,
  },
  {
    name: "GPT-4.1 Nano",
    modelId: "gpt-4.1-nano",
    description: "Ultra-compact model for basic tasks",
    capabilities: [ModelCapability.Fast],
    bestFor: ["Simple queries", "Ultra-fast", "Basic assistance"],
    contextLength: 32000,
  },
  {
    name: "GPT-3.5 Turbo",
    modelId: "gpt-3.5-turbo",
    description: "Fast and cost-effective for simple tasks",
    capabilities: [ModelCapability.Fast],
    bestFor: ["Simple chat", "Quick responses", "Basic tasks"],
    contextLength: 16385,
  },
  {
    name: "O1",
    modelId: "o1",
    description: "Advanced reasoning model for complex problems",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Reasoning,
      ModelCapability.Code,
    ],
    bestFor: ["Complex reasoning", "Math", "Science", "Research"],
    contextLength: 200000,
  },
  {
    name: "O1 Mini",
    modelId: "o1-mini",
    description: "Compact reasoning model",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Reasoning,
      ModelCapability.Code,
    ],
    bestFor: ["Problem solving", "Math", "Efficient reasoning"],
    contextLength: 128000,
  },
  {
    name: "O1 Preview",
    modelId: "o1-preview",
    description: "Preview of advanced reasoning capabilities",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Reasoning,
      ModelCapability.Code,
    ],
    bestFor: ["Complex analysis", "Research", "Problem solving"],
    contextLength: 128000,
  },
  {
    name: "O3 Mini",
    modelId: "o3-mini",
    description: "Next-generation reasoning model",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Reasoning,
      ModelCapability.Code,
    ],
    bestFor: ["Advanced reasoning", "Complex problems", "Research"],
    contextLength: 200000,
    isNew: true,
  },
  {
    name: "O3",
    modelId: "o3",
    description: "Most advanced reasoning model",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Reasoning,
      ModelCapability.Code,
    ],
    bestFor: ["Complex reasoning", "Research", "Advanced analysis"],
    contextLength: 200000,
    isNew: true,
  },
  {
    name: "O4 Mini",
    modelId: "o4-mini",
    description: "Latest generation reasoning model",
    capabilities: [
      ModelCapability.Thinking,
      ModelCapability.Reasoning,
      ModelCapability.Code,
    ],
    bestFor: ["Advanced reasoning", "Complex tasks", "Research"],
    contextLength: 200000,
    isNew: true,
  },
];

export const openAiModels: Model[] = openAiModelData.map((model) => ({
  ...model,
  provider: "openai",
}));
